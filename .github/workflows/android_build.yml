name: android_build

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the code
        uses: actions/checkout@v3  # 更新到最新版本
        with:
          fetch-depth: 1  # 简化克隆深度设置
      
      - name: Set up JDK
        uses: actions/setup-java@v3  # 更新到最新版本
        with:
          distribution: 'temurin'  # 明确指定JDK发行版
          java-version: 17  # 升级到最新稳定版JDK17
      
      - name: Get project name
        id: get-project
        run: |
          PROJECT=$(cat project-to-build)
          echo "project=$PROJECT" >> $GITHUB_OUTPUT  # 使用新式输出方式
      
      - name: Clone project
        run: git clone --depth=1 ${{ steps.get-project.outputs.project }} project
      
      - name: Setup Gradle cache
        uses: actions/cache@v3  # 新增缓存步骤
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
          restore-keys: ${{ runner.os }}-gradle-
      
      - name: Build the app
        working-directory: ./project
        run: |
          ./gradlew --no-daemon assembleDebug --stacktrace
        
      - name: Extract APK Path
        id: extract_apk
        working-directory: ./project
        run: |
          # 使用 find 的 -print0 配合 xargs 处理带空格路径
          APK_PATHS=$(find . -name "*.apk" -print0 | xargs -0)
          # 确保路径按换行分割并正确转义
          echo "$APK_PATHS" | jq -R -s -c 'split("\u0000")[:-1] | map(select(length > 0))' > apk_paths.json
          # 确保JSON内容用双引号包裹作为字符串输出
          echo "apk_paths=\"$(cat apk_paths.json)\"" >> $GITHUB_OUTPUT
          # 只保留第一个APK路径用于兼容旧流程
          echo "APK_PATH=$(echo "$APK_PATHS" | head -n1)" >> $GITHUB_ENV

  upload_apk:
    needs: build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        apk: ${{ fromJSON(needs.build.outputs.apk_paths) }}
    steps:
      - name: Download Artifact
        uses: actions/download-artifact@v4
        with:
          path: project

      - name: Upload APK
        if: matrix.apk != ''
        uses: actions/upload-artifact@v4
        with:
          name: my-build-apk-${{ matrix.apk }}
          path: ${{ matrix.apk }}
