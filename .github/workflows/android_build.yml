name: android_build

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the code
        uses: actions/checkout@v3
        with:
          fetch-depth: 1
      
      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: 17
      
      - name: Get project name
        id: get-project
        run: |
          PROJECT=$(cat project-to-build)
          echo "project=$PROJECT" >> $GITHUB_OUTPUT
      
      - name: Clone project
        run: git clone --depth=1 ${{ steps.get-project.outputs.project }} project
      
      - name: Setup Gradle cache
        uses: actions/cache@v3
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
          restore-keys: ${{ runner.os }}-gradle-
      
      - name: Build the app
        working-directory: ./project
        run: |
          ./gradlew --no-daemon assembleDebug --stacktrace
      
      - name: Find APK files
        id: find-apk
        run: |
          APK_FILES=($(find . -type f -name "*.apk" | sort -r | head -n 2))
          if [ ${#APK_FILES[@]} -eq 0 ]; then
            echo "apk_paths=" >> $GITHUB_OUTPUT
          else
            # 使用双引号包裹每个路径以处理特殊字符
            echo "apk_paths=$(printf '\"%s\"\n' "${APK_FILES[@]}")" >> $GITHUB_OUTPUT
          fi

      - name: Upload APK
        if: matrix.apk != ''
        uses: actions/upload-artifact@v4
        with:
          name: my-build-apk-${{ matrix.apk }}
          # 添加双引号包裹路径并转义特殊字符
          path: "$(echo ${{ matrix.apk }} | sed 's/[+.]/\\&/g')"
